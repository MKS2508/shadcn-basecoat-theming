---
export interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link' | 'destructive' | 'icon';
  size?: 'sm' | 'lg';
  disabled?: boolean;
  class?: string;
  [key: string]: any;
}

const { variant = "primary", size, disabled = false, class: className = "", ...restProps } = Astro.props;

// Generar clases CSS siguiendo convenciones de Basecoat
let buttonClass = 'btn';

// Variantes: btn-primary es equivalente a btn según Basecoat
if (variant !== 'primary') {
  buttonClass = `btn-${variant}`;
}

// Tamaños: se combinan correctamente según Basecoat (btn-lg-destructive)
if (size) {
  if (variant === 'primary') {
    buttonClass = `btn-${size}`;
  } else {
    buttonClass = `btn-${size}-${variant}`;
  }
}
---

<button 
  class={`${buttonClass} ${className}`.trim()}
  disabled={disabled}
  {...restProps}
>
  <slot />
</button>